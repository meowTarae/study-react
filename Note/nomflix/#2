!   styled-components

    React에서 css를 부여하기위해
    css.module 파일 만들고... import해서 className에 부여했었는데,
    또 다른 방법을 알아보자.
    바로 스타일링된 컴포넌트를 만들어서 사용하는 방법이다.

    import styled from 'styled-components';

    1번 )
    const MyButton = styled.button`
      background: ${(props) => props.primary ? 'palevioletred' : 'white'};
      border-radius: 3px;
      color: white;
      // css 작성할 때 처럼 쓰면 됨 ㅇㅇ
    `;

    2번 )
    const inheritence = styled(MyButton)`
      background: black;
    `;  
    // extend 기능이다 like 상속. MyButton의 css + bgColor: black


    3번 )
    const Input = styled.input.attrs({ type: 'password' })`
      background: black;
    `;
    // attrs를 통해 props를 넘겨줄 수 있다.
    
    function App() {
        return (
            <>
                <MyButton primary={true} />
                <MyDiv as="div" />   
                // Button의 css를 그대로 가져오되, html tag만 div로 바꾸고 싶을때

                <Btn>
                  <span>Test</span>
                </Btn>
                // component 안에 다른 component를 넣을땐 <> </>로 감싸줘야한다.
            </>
        )
    }


    animation 사용 방법!

    import { keyframes } from 'styled-components';

    const rotate360 = keyframes`    // styled가 아니라 keyframes를 적어서 사용
      from {
        transform: rotate(0deg);
      }
      to {
        transform: rotate(360deg);
      }
    `;

    const Btn = styled.button` ~~~ `;

    const Div = styled.div`
      animation: ${rotate360} 2s linear infinite;
      
      // Div component 내부 html tag에 대하여
      ${Btn} {  // ${}를 사용해서 컴포넌트를 가져올 수 있두아
        ~~
        &:hover {
          // 또한 sass처럼 &를 사용할 수 있다.
        }
      }
    `;



!   Theme

    ThemeProvider를 사용해서 테마를 설정할 수 있다.

    index.js
        import { ThemeProvider } from 'styled-components';

        const darkTheme = {
          textColor: '#242424',
          backgroundColor: '#000000',
        };
        const lightTheme = {
          textColor: '#242424',
          backgroundColor: '#000000',
        };
        // 위 아래 프로퍼티 이름을 같게 해야, theme만 바꾸면 색상이 바뀌게끔 적용되겠쥐
        
        const root = ReactDOM.createRoot(document.getElementById('root'));
        root.render(
            <>
                <ThemeProvider theme={darkTheme}>
                    <App />
                </ThemeProvider>
            </>
        );

    App.js
        const Title = styled.h1`
          color: ${(props) => props.theme.textColor};
        `;
        
    이렇게 해주면 darkTheme일때, lightTheme일때에 맞게 색상이 바뀐다.